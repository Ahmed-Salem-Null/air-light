// Site navigation mobile layout
//
// The main layout for the website navigation, for the mobile
// version only.
//

// Main level settings
$absolute-navigation-mobile: true;
$color-background-nav-mobile-header: $color-main;
$color-background-nav-mobile-layer: $color-white;
$color-current-mobile: $color-links;
$color-hamburger-active: $color-white;
$color-hamburger: $color-white;
$color-active-main-level-mobile: $color-links;
$color-main-level-mobile: $color-black;
$color-separator-nav-mobile: #f0f0f0;
$font-weight-main-level-mobile: 600;

// Sub menu settings
$color-background-sub-menu-mobile: $color-white;
$color-border-sub-menu-mobile: $color-hover;
$color-sub-menu-mobile: $color-links;
$font-weight-sub-menu-mobile: 600;

// Settings for jonsuh/hamburgers
$hamburger-padding-x: 1.5rem;
$hamburger-padding-y: 4rem;
$hamburger-layer-width: 3rem;
$hamburger-layer-height: .2rem;
$hamburger-layer-spacing: .5rem;
$hamburger-layer-color: $color-hamburger;
$hamburger-layer-border-radius: 0;
$hamburger-hover-opacity: .8;
$hamburger-hover-transition-duration: .15s;
$hamburger-hover-transition-timing-function: linear;
$nav-open-from-direction: top;
$mobile-nav-height: 80px;

// CSS variables
// These can be adjusted with media queries for in-between breakpoints
:root {
  // Main level CSS vars
  --font-size-main-level-mobile: 17px;
  --font-size-sub-menu-mobile: 14px;
  --padding-main-level-vertical-mobile: .6rem;
  --padding-main-level-horizontal-mobile: 2rem;

  // Sub menu CSS vars
  --padding-sub-menu-vertical-mobile: .4rem;
  --padding-sub-menu-horizontal-mobile: 1.5rem;
}

// Init Tasty Hamburger navigation toggle
@import 'hamburgers/_sass/hamburgers/hamburgers';

// Init hamburger animation
// Choose from animations: https://jonsuh.com/hamburgers/
.hamburger {
  @extend .hamburger--collapse;
}

// Let's ensure site-header loads properly and doesn't leave empty spaces
@media (max-width: $responsivenav) {
  .nav-container {
    @if $absolute-navigation-mobile == false {
      background-color: $color-background-nav-mobile-header;
      position: relative;
      z-index: 222;
    }

    @if $absolute-navigation-mobile == true {
      background-color: transparent;
      position: absolute;
      width: 100%;
    }
  }
}

// Mobile styles
@media screen and (max-width: $responsivenav - 1px) {
  .main-navigation-wrapper {
    order: 6;
    z-index: 999;
  }

  // Users that don't have Javascript enabled
  .no-js .site-header {
    position: static;

    // Use the same color than navigation
    background: $color-background-nav-mobile-header;
  }

  // Disable scroll on html body when menu is opened.
  .disable-scroll {
    overflow: hidden;
  }

  .nav-primary {
    height: 100vh;
    width: 100vw;
    overflow: auto;
    transition: all $transition-duration ease-in-out;
    margin: 0;
    display: block;
    will-change: opacity;
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
  }

  .menu-items {
    opacity: 0;
    margin: 0;
    width: 100%;
    float: none;
    padding: 2rem 0;
  }

  // Main level mobile navigation links
  .menu-item a {
    border-top: 1px solid $color-separator-nav-mobile;
    padding-top: 1.2rem;
    padding-bottom: 1.2rem;
    padding-left: 2.5rem;
    padding-right: 5.8rem; // Make room for the toggle button (sub indicator)
    margin-left: 0;
    margin-right: 0;
    color: $color-main-level-mobile;
    font-size: var(--font-size-main-level-mobile);
    font-weight: $font-weight-main-level-mobile;
    text-decoration: none;
    position: relative;
    z-index: 0;
    display: block;
    outline: none; // We have color here, so it's okay to remove outline
  }

  .menu-item a:hover,
  .menu-item a:focus {
    color: $color-active-main-level-mobile;
  }

  .menu-item.current-menu-parent > a,
  .menu-item.current-menu-item > a {
    color: $color-current-mobile;
  }

  // Dropdown toggle
  .dropdown-toggle {
    position: absolute;
    top: 0;
    left: auto;
    right: 10px;
    width: 12px;
    height: 7px;
    overflow: hidden;
    background: transparent;
    border: 0;
    padding: 20px;
    z-index: 9999;
    background-image: url('../svg/mobile-nav-arrow-down.svg');
    background-position: center;
    background-size: 12px 7px;
    background-repeat: no-repeat;
    transition: all $transition-duration;
    transform: rotate(0);
  }

  .dropdown-toggle:focus {
    z-index: 10000;
  }

  // Hide desktop toggles
  .dropdown-toggle svg {
    display: none;
  }

  .dropdown-toggle.toggled-on {
    background-color: transparent;
    transform: rotate(-180deg);
    cursor: pointer;
  }

  // Dropdowns
  ul {
    background: $color-background-nav-mobile-layer;
  }

  // Mobile navigation core functionality
  .js .nav-primary {
    // Hide mobile navigation by default while enabling use of animations
    position: fixed;
    z-index: 5;

    // Default position, some browsers need this
    top: $mobile-nav-height;
    left: 0;

    .menu-items {
      padding: 0;

      // Let's keep the content always full height
      height: 100vh;
    }
  }

  // Ensure nav stays in the same position when activated
  .js.js-nav-active {
    overflow: hidden;

    .nav-primary {
      visibility: visible;
      opacity: 1;
      pointer-events: all;
    }

    .menu-items {
      opacity: 1;
    }
  }
}

// Hamburger menu icon specific
.hamburger.is-active .hamburger-inner,
.hamburger.is-active .hamburger-inner::before,
.hamburger.is-active .hamburger-inner::after {
  color: $color-hamburger-active;
  background: $color-hamburger-active;
}

.nav-toggle {
  list-style: none;
  z-index: 100000;
  border: 0;
  overflow: visible;
  color: $color-hamburger;
  font-weight: 700;
  user-select: none;
  text-decoration: none;
  padding: 2rem;
  margin: 0 -2rem 0 0;
  background: transparent;
  cursor: pointer;
  position: relative;
  top: 0;

  // Hide from desktops
  display: none;

  // Modern stuff (::after is first line, without ::after is first)
  &:not(.toggled-on) .hamburger-inner {
    width: 18px;
    transition: width $transition-duration;
  }

  &.is-active .hamburger-inner,
  &:hover .hamburger-inner,
  &:focus .hamburger-inner {
    width: $hamburger-layer-width;
  }

  span {
    color: $color-hamburger;
    font-size: 1.2em;
  }

  &.is-active span {
    color: $color-hamburger-active;
  }

  &:hover,
  &:active {
    color: $color-hamburger;

    span {
      color: $color-hamburger;
    }
  }

  // Alternative focus for mobile nav
  &:focus {
    span span {
      background-color: $color-hamburger;
    }

    span span::before,
    span span::after {
      background-color: $color-hamburger;
    }
  }

  // We already have aria-label for button
  // But we want to show nav-toggle visually for seeing users
  // So we'll add has-visible-label to nav-toggle in header.php
  &:not(.has-visible-label) .nav-toggle-label {
    display: none;
  }

  @media (max-width: $responsivenav - 1px) {
    display: block;

    &.has-visible-label {
      display: flex;
      align-items: center;

      .nav-toggle-label {
        font-size: var(--font-size-nav-toggle-label);

        // Hide on smallest phones
        @media (max-width: 410px) {
          display: none;
        }
      }

      @media (min-width: 411px) {
        .hamburger-box {
          margin-right: 2rem;
        }
      }
    }
  }

  // Separate active colors for opened state
  &.is-active {
    color: $color-hamburger-active;
  }

  &.is-active .hamburger-box {
    .hamburger-inner {
      background-color: $color-hamburger-active;
    }

    .hamburger-inner::after {
      background-color: $color-hamburger-active;
    }
  }

  &.is-active .focus,
  &.is-active span:focus {
    .hamburger-inner {
      background-color: $color-hamburger-active;
    }

    .hamburger-inner::after {
      background-color: $color-hamburger-active;
    }
  }

  &.is-active span:focus,
  &.is-active span:hover,
  &.is-active span:active {
    color: $color-hamburger-active;

    span {
      color: $color-hamburger-active;
    }
  }
}

